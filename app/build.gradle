apply plugin: 'com.android.application'

def generateVersionNumberString = { ->
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append((new Date()).format('yyMMddHHmm'))
    return stringBuilder.toString();
}

def generateVersionName = { ->

    StringBuilder stringBuilder = new StringBuilder();
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--always'
            standardOutput = stdout
        }
        String commitObject = stdout.toString().trim()
        try {
            stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'describe', '--tags'
                standardOutput = stdout
            }
            //stringBuilder.append(stdout.toString().trim())
            //stringBuilder.append("-")
        } catch (ignored) {
            // no tags
        }

        stringBuilder.append(commitObject)
        stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--show-toplevel'
            standardOutput = stdout
        }
        if (stdout.toString().trim().contains("xDrip-Experimental")) {
            stringBuilder.append("-experimental")
        }

        stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
            standardOutput = stdout
        }
        String branch = stdout.toString().trim()
        if (!branch.equals("master")) {
            stringBuilder.append('-')
            stringBuilder.append(branch)
        }

    } catch (ignored) {
        return "NoGitSystemAvailable";
    }
    stringBuilder.append('-')
    stringBuilder.append((new Date()).format('yyyy.MM.dd'))
    return stringBuilder.toString()

}

android {
    compileSdkVersion 26

    defaultConfig {
        applicationId "com.power.nfcdemo"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
//        buildConfigField "int", "buildVersion", generateVersionNumberString()
//        externalNativeBuild {
//            cmake {
//                cppFlags ""
//            }
//        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        ndk {
//            abiFilters  "armeabi-v7a"
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
//    ndkVersion '22.1.7171670'
}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'com.google.android.material:material:1.3.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    implementation 'com.google.code.gson:gson:2.8.1'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.google.code.gson:gson:2.8.1'
}